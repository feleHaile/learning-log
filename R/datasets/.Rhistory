library(sparklyr)
devtools::install_github("rstudio/sparklyr")
install.packages('backports')
library(backports)
devtools::install_github("rstudio/sparklyr")
library(sparklyr)
Sys.setenv(SPARK_HOME='C:/Program Files (x86)/spark-2.0.2-bin-hadoop2.7')
.libPaths(c(file.path(Sys.getenv('SPARK_HOME'), 'R', 'lib'), .libPaths()))
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
sc <- sparkR.init(master="local")
sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
library(rJava)
sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
setwd("C:\\Users\\JYESOH\\Desktop\\GIT\\useful.scripts\\R\\datasets")
bnames <- read.csv("bnames.csv", stringsAsFactors = FALSE)
head(bnames)
letter <- function(x, n = 1) {
if (n < 0) {
nc <- nchar(x)
n <- nc + n + 1
}
tolower(substr(x, n, n))
}
letter('eunice', -2)
letter('eunice', -1)
# function to count the number of vowels
vowels <- function(x) {
nchar(gsub("[^aeiou]", "", x))
}
bnames.2 <- transform(bnames,
first = letter(name, 1),
last = letter(name, -1),
length = nchar(name),
vowels = vowels(name)
)
bnames.2
head(bnames.2,20)
substr('eunice', 5,5)
substr('eunice', 5)
summarise(bnames,
max_perc = max(percent),
min_perc = min(percent))
library(plyr)
bnames.2 <- transform(bnames,
first = letter(name, 1),
last = letter(name, -1),
length = nchar(name),
vowels = vowels(name)
)
head(bnames.2, 20)
??transform
one <- subset(bnames, sex == 'boy' & year == 2008)
one$rank <- rank(-one$percent, ties.method='first')
one$rank
head(one, 20)
summarise(bnames,
max_perc = max(percent),
min_perc = min(percent))
bnames <- ddply(bnames, c("sex", "year"), transform,
rank = rank(-percent, ties.method = "first"))
pieces <- split(bnames, list(bnames$sex, bnames$year))
pieces
head(pieces, 40)
head(pieces, 10)
head(results)
pieces <- split(bnames, list(bnames$sex, bnames$year))
setwd("C:\\Users\\JYESOH\\Desktop\\GIT\\useful.scripts\\R\\datasets")
bnames <- read.csv("bnames.csv", stringsAsFactors = FALSE)
head(bnames)
pieces <- split(bnames, list(bnames$sex, bnames$year))
results <- vector("list", length(pieces))
head(results, 20)
results
seq_along(pieces)
??seq_along
??transform
transform(airquality, Ozone = -Ozone)
transform(airquality, new = -Ozone, Temp = (Temp-32)/1.8)
head(bnames.2, 20)
summarise(bnames,
max_perc = max(percent),
min_perc = min(percent))
ddply(bnames, c("name"), summarise, tot = sum(percent))
ddply(bnames, c("length"), summarise, tot = sum(percent))
ddply(bnames, c("length"), summarise, tot = sum(percent))
bnames.2 <- transform(bnames,
first = letter(name, 1),
last = letter(name, -1),
length = nchar(name),
vowels = vowels(name)
)
bnames <- transform(bnames,
first = letter(name, 1),
last = letter(name, -1),
length = nchar(name),
vowels = vowels(name)
)
ddply(bnames, c("length"), summarise, tot = sum(percent))
ddply(bnames, c("year", "sex"), summarise, tot = sum(percent))
bnames <- ddply(bnames, c("sex", "year"), transform,
rank = rank(-percent, ties.method = "first"))
bnames
setwd("C:\\Users\\JYESOH\\Desktop\\GIT\\useful.scripts\\R\\datasets")
bnames <- read.csv("bnames.csv", stringsAsFactors = FALSE)
head(bnames)
letter <- function(x, n = 1) {
if (n < 0) {
nc <- nchar(x)
n <- nc + n + 1
}
tolower(substr(x, n, n))
}
letter('eunice', -2)
letter('eunice', -1)
# function to count the number of vowels
vowels <- function(x) {
nchar(gsub("[^aeiou]", "", x))
}
bnames <- transform(bnames,
first = letter(name, 1),
last = letter(name, -1),
length = nchar(name),
vowels = vowels(name)
)
summarise(bnames,
max_perc = max(percent),
min_perc = min(percent))
bnames <- ddply(bnames, c("sex", "year"), transform,
rank = rank(-percent, ties.method = "first"))
letter <- function(x, n = 1) {
if (n < 0) {
nc <- nchar(x)
n <- nc + n + 1
}
tolower(substr(x, n, n))
}
letter('eunice', -2)
letter('eunice', -1)
# function to count the number of vowels
vowels <- function(x) {
nchar(gsub("[^aeiou]", "", x))
}
bnames <- transform(bnames,
first = letter(name, 1),
last = letter(name, -1),
length = nchar(name),
vowels = vowels(name)
)
bnames <- ddply(bnames, c("sex", "year"), transform,
rank = rank(-percent, ties.method = "first"))
bnames
head(bnames,20)
fl <- ddply(bnames, c("year", "sex", "first"), summarise, tot = sum(percent))
head(fl)
ggplot(fl, aes(x=year, y=tot)) +
geom_line(colour=sex) +
facets (~ first)
library(ggplot2)
ggplot(fl, aes(x=year, y=tot)) +
geom_line(colour=sex) +
facets (~ first)
ggplot(fl, aes(x=year, y=tot)) +
geom_line(colour=sex) +
facet_wrap(~ first, ncol=5)
summary(fl)
head(fl)
ggplot(fl, aes(x=year, y=tot, colour=sex)) +
geom_line() +
facet_wrap(~ first, ncol=5)
library(plyr)
setwd("C:\\Users\\JYESOH\\Desktop\\GIT\\useful.scripts\\R\\datasets")
bnames <- read.csv("bnames.csv", stringsAsFactors = FALSE)
bnames <- read.csv("bnames.csv", stringsAsFactors = FALSE)
bnames <- ddply(bnames, c("sex", "year"), transform,
rank = rank(-percent, ties.method = "first"))
head(bnames,20)
top100 <- subset(bnames, rank <= 100)
top100s <- ddply(top100, c("sex", "year"), summarise,
tot = sum(percent))
library(ggplot2)
plot(top100s, aes(x=year, y=tot, colour=sex)) +
geom_line() + scale_y_continuous(limits=c(0,1))
head(top100s)
summary(top100s$year)
ggplot(top100s, aes(x=year, y=tot, colour=sex)) +
geom_line() + scale_y_continuous(limits=c(0,1)) +
scale_x_continuous(limits=c(1880,2008))
ggplot(top100s, aes(x=year, y=tot, colour=sex)) +
geom_line() + scale_y_continuous(limits=c(0,1)) +
scale_x_date(limits=c(1880,2008))
library(ggplot2)
ggplot(top100s, aes(x=year, y=tot, colour=sex)) +
geom_line() + scale_y_continuous(limits=c(0,1)) +
scale_x_continuous(limits=c(1880,2008))
library(ggplot2)
options(na.action = "na.exclude")
deseas <- function(var, month) {
resid(lm(var ~ factor(month))) + mean(var, na.rm = TRUE)
}
setwd("C:\\Users\\JYESOH\\Desktop\\GIT\\useful.scripts\\R\\datasets")
tx <- read.csv("tx-house-sales.csv")
qplot(date, sales, data = tx, geom = "line", group = city)
ggsave("tx-all-sales.pdf", width = 8, height = 4)
library(ggplot2)
ggplot(top100s, aes(x=year, y=tot, colour=sex)) +
geom_line() + scale_y_continuous(limits=c(0,1)) +
scale_x_continuous(limits=c(1880,2008))
qplot(date, sales, data = tx, geom = "line", group = city)
qplot(date, sales, data = tx, geom = "line", facets = city)
qplot(date, sales, data = tx, geom = "line", facets = tx$city)
qplot(date, sales, data = tx, geom = "line", facets = ~tx$city)
models <- dlply(tx, "city", function(df)
lm(sales ~ factor(month), data = df))
models <- dlply(tx, "city", function(df)
lm(sales ~ factor(month), data = df))
models[[1]]
coef(models[[1]])
ldply(models, coef)
setwd("C:\\Users\\JYESOH\\Desktop\\GIT\\useful.scripts\\R\\datasets")
tx <- read.csv("tx-house-sales.csv")
setwd("C:\\Users\\JYESOH\\Desktop\\GIT\\useful.scripts\\R\\datasets")
tx <- read.csv("tx-house-sales.csv")
qplot(date, sales, data = tx, geom = "line", group = city)
ggsave("tx-all-sales.pdf", width = 8, height = 4)
tx <- ddply(tx, "city", transform,
sales_ds = deseas(sales, month))
qplot(date, sales_ds, data = tx, geom = "line", group = city)
models <- dlply(tx, "city", function(df)
lm(sales ~ factor(month), data = df))
setwd("C:\\Users\\JYESOH\\Desktop\\GIT\\useful.scripts\\R\\datasets")
houston <- subset(read.csv("tx-house-sales.csv"), city == "Houston")
qplot(date, avgprice, data = houston, geom = "line")
ggsave("tx-houston-price.pdf", width = 8, height = 4)
qplot(date, listings, data = houston, geom = "line")
qplot(date, sales, data = houston, geom = "line")
ggsave("tx-houston-sales.pdf", width = 8, height = 4)
qplot(date, sales / listings, data = houston, geom = "line")
avg <- stat_summary(aes(group = 1), fun.y = "mean", geom = "line",
colour = "red", size = 2, na.rm = TRUE)
qplot(month, avgprice, data = houston, geom = "line", group = year) + avg
avg
houston <- transform(houston,
avgprice_ds = deseas(avgprice, month),
listings_ds = deseas(listings, month),
sales_ds = deseas(sales, month),
onmarket_ds = deseas(onmarket, month)
)
qplot(month, avgprice_ds, data = houston, geom = "line", group = year) + avg
qplot(date, avgprice_ds, data = houston, geom = "line")
qplot(date, sales_ds, data = houston, geom = "line")
qplot(date, listings_ds, data = houston, geom = "line")
qplot(date, listings_ds, data = houston, geom = "line")
qplot(date, listings_ds, data = houston, geom = "line")
qplot(date, sales_ds / listings_ds, data = houston, geom = "line")
qplot(date, onmarket_ds, data = houston, geom = "line")
qplot(date, sales, data = tx, geom = "line", group = city)
models[[1]]
coef(models[[1]])
ldply(models, coef)
qplot(date, log10(sales), data = tx, geom = "line", group = city)
ggsave("tx-all-sales-log.pdf", width = 8, height = 6)
models2 <- dlply(tx, "city", function(df)
lm(log10(sales) ~ factor(month), data = df))
models2
names(df)
head(df)
df(tx)
head(tx, 20)
qplot(month, effect, data = coef2, group = city, geom = "line")
coef2 <- ldply(models2, function(mod) {
data.frame(
month = 1:12,
effect = c(0, coef(mod)[-1]),
intercept = coef(mod)[1])
})
qplot(month, effect, data = coef2, group = city, geom = "line")
qplot(month, 10 ^ effect, data = coef2, group = city, geom = "line")
qplot(month, 10 ^ effect, data = coef2, geom = "line") + facet_wrap(~ city)
qplot(month, effect, data = coef2, group = city, geom = "line")
qplot(month, 10 ^ effect, data = coef2, group = city, geom = "line")
qplot(month, 10 ^ effect, data = coef2, geom = "line") + facet_wrap(~ city)
rsq <- function(mod) c(rsq = summary(mod)$r.squared)
